# Copyright 2009-2024 David Hadka
# 
# This file is part of the MOEA Framework.
# 
# The MOEA Framework is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by 
# the Free Software Foundation, either version 3 of the License, or (at your 
# option) any later version.
# 
# The MOEA Framework is distributed in the hope that it will be useful, but 
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public 
# License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License 
# along with the MOEA Framework.  If not, see <http://www.gnu.org/licenses/>.

BuildProblem.description = Constructs the scaffolding for a natively-compiled problem in a target language.
BuildProblem.option.problemName = The name of the problem (must be a valid Java identifier)
BuildProblem.option.functionName = The name of the native function (must be a valid function name)
BuildProblem.option.language = The target language (supports "c", "cpp", "fortran", "java", "python", and "external")
BuildProblem.option.numberOfVariables = The number of real-valued decision variables
BuildProblem.option.numberOfObjectives = The number of objectives
BuildProblem.option.numberOfConstraints = The number of constraints (default: 0)
BuildProblem.option.lowerBound = Sets the lower bound for each real-valued decision variable (default: 0.0)
BuildProblem.option.upperBound = Sets the upper bound for each real-valued decision variable (default: 1.0)
BuildProblem.option.directory = Changes the directory where the files are generated (default: native/)
BuildProblem.option.overwrite = If set, overwrites any existing content in the directory
BuildProblem.option.classpath = If set, overwrites the classpath used for compiling and running Java programs

JNAInfo.description = Displays system information used by Java Native Access (JNA) when building native libraries.
JNAInfo.option.problem = The name of the problem (or library name without the platform-specific extension)
JNAInfo.option.sysArch = Display the OS and system architecture
JNAInfo.option.libName = Display the platform specific filename for the compiled library
JNAInfo.option.test = Test if the named library can be located and loaded by JNA